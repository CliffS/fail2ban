// Generated by CoffeeScript 2.3.2
(function() {
  var END, Fail2Ban, Property, fs, net, unpickle;

  fs = require('fs');

  net = require('net');

  unpickle = require('unpickle');

  Property = require('./Property');

  END = "<F2B_END_COMMAND>";

  Fail2Ban = (function() {
    class Fail2Ban extends Property {
      constructor(socketFile = '/var/run/fail2ban.sock') {
        var stats;
        super();
        stats = fs.statSync(socketFile);
        if (stats.isSocket()) {
          this.socket = socketFile;
        } else {
          throw socketFile + " is not valid socket";
        }
      }

      message(...msg) {
        return new Promise((resolve, reject) => {
          var conn, encoded;
          encoded = unpickle.dump(msg);
          return conn = net.connect(this.socket, () => {
            conn.write(encoded);
            return conn.write(END);
          }).on('error', (err) => {
            return reject(err);
          }).on('data', (data) => {
            var response, result;
            response = Buffer.from(data);
            if (response.toString('binary').endsWith(END)) {
              response = response.slice(0, response.length - END.length);
            }
            conn.end();
            result = unpickle.parse(response);
            return resolve(result[1]);
          });
        });
      }

      ping() {
        return this.message('ping');
      }

      reload(jail) {
        if (jail) {
          return this.message('reload', jail);
        }
        return this.message('reload');
      }

    };

    Fail2Ban.property('status', {
      get: async function() {
        var response, status;
        response = (await this.message('status'));
        return status = {
          jails: response[0][1],
          list: response[1][1].split(/,\s*/)
        };
      }
    });

    Fail2Ban.property('dbfile', {
      get: async function() {
        return (await this.message('get', 'dbfile'));
      },
      set: async function(file) {
        return (await this.message('set', 'dbfile', file));
      }
    });

    return Fail2Ban;

  }).call(this);

  module.exports = Fail2Ban;

}).call(this);
